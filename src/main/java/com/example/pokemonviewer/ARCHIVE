//  private @NotNull GridPane createRow(GridPane row, String link, int linkIdx, int rowIdx) throws IOException {
//    GridPane pokemonCard = new PokemonCard(link)
//        .onClick(e -> {
//          PokemonInfoCard.populateCard(link, new HashMap<>() {{
//            put("name", pokemonName);
//            put("image", pokemonImage);
//            put("pokedex_data", pokedexDataContainer);
//            put("base_stats", baseStatsContainer);
//            put("abilities", abilitiesWrapper);
//            put("evolution", pokemonEvolutionsWrapper);
//          }});
//
//          sPane.setDisable(true);
//          pokemonCardWrapper.setOpacity(.2);
//          infoCard.setVisible(true);
//        })
//        .onHover()
//        .getCard();
//
//    switch (linkIdx) {
//      case 0 -> row.add(pokemonCard, 0, rowIdx);
//      case 1 -> row.add(pokemonCard, 1, rowIdx);
//      case 2 -> row.add(pokemonCard, 2, rowIdx);
//    }
//
//    row.setHgap(20);
//    row.setAlignment(Pos.CENTER);
//
//    return row;
//  }

  /**
   * Shows the remaining Pokémon on the screen. Call in {@link  #handleScroll()} to show.
   *
   * @param start The index of the list to start from.
   * @param end   The index of the list to end.
   */
//  private void displayPokemon(int start, int end) throws IOException {
//    this.links = Pokemon.urls(1);
//
//    loopLinks(this.links.subList(start, end));
//  }

//  private List<GridPane> cardRows(@NotNull Collection<String> collection, GridPane row) throws IOException {
//    List<GridPane> rows = new ArrayList<>();
//
//    int idx = 0, gridRow = 0;
//
//    for (Iterator<String> i = collection.iterator(); i.hasNext(); idx++) {
//      String link = i.next();
//      rows = new ArrayList<>();
//
//      rows.add(createRow(row, link, idx, gridRow));
//      gridRow++;
//    }
//
//
//    return rows;
//  }

  /**
   * @param urls The list of urls of the Pokémon from the selected category.
   */
//  private void loopLinks(@NotNull List<String> urls) throws IOException {
//    int index = 0;
//
//    while (index < urls.size()) {
//      GridPane row = new GridPane();
//      List<String> links = urls.subList(index, index + 3);
//
//      pokemonCardWrapper.getChildren().addAll(cardRows(links, row));
//
//      index += 3;
//    }
//    var x = 10;
//  }
